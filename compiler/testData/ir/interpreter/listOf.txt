FILE fqName:<root> fileName:/listOf.kt
  FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a> visibility:public modality:FINAL <> () returnType:kotlin.Int
    correspondingProperty: PROPERTY name:a visibility:public modality:FINAL [const,val]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun <get-a> (): kotlin.Int declared in <root>'
        GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.Int visibility:public [final,static]' type=kotlin.Int origin=null
  FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.Int visibility:public [final,static]
    EXPRESSION_BODY
      CONST Int type=kotlin.Int value=3
  FUN DEFAULT_PROPERTY_ACCESSOR name:<get-b> visibility:public modality:FINAL <> () returnType:kotlin.Int
    correspondingProperty: PROPERTY name:b visibility:public modality:FINAL [const,val]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun <get-b> (): kotlin.Int declared in <root>'
        GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Int visibility:public [final,static]' type=kotlin.Int origin=null
  FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Int visibility:public [final,static]
    EXPRESSION_BODY
      CONST Int type=kotlin.Int value=0
  FUN DEFAULT_PROPERTY_ACCESSOR name:<get-c> visibility:public modality:FINAL <> () returnType:kotlin.Int
    correspondingProperty: PROPERTY name:c visibility:public modality:FINAL [const,val]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun <get-c> (): kotlin.Int declared in <root>'
        GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:c type:kotlin.Int visibility:public [final,static]' type=kotlin.Int origin=null
  FIELD PROPERTY_BACKING_FIELD name:c type:kotlin.Int visibility:public [final,static]
    EXPRESSION_BODY
      CONST Int type=kotlin.Int value=1
  FUN name:getSum visibility:public modality:FINAL <> (list:kotlin.collections.List<kotlin.Int>) returnType:kotlin.Int
    annotations:
      CompileTimeCalculation
    VALUE_PARAMETER name:list index:0 type:kotlin.collections.List<kotlin.Int>
    BLOCK_BODY
      VAR name:sum type:kotlin.Int [var]
        CONST Int type=kotlin.Int value=0
      VAR FOR_LOOP_ITERATOR name:tmp0_iterator type:kotlin.collections.Iterator<kotlin.Int> [val]
        CALL 'public abstract fun iterator (): kotlin.collections.Iterator<E of kotlin.collections.List> [operator] declared in kotlin.collections.List' type=kotlin.collections.Iterator<kotlin.Int> origin=FOR_LOOP_ITERATOR
          $this: GET_VAR 'list: kotlin.collections.List<kotlin.Int> declared in <root>.getSum' type=kotlin.collections.List<kotlin.Int> origin=null
      WHILE label=null origin=FOR_LOOP_INNER_WHILE
        condition: CALL 'public abstract fun hasNext (): kotlin.Boolean [operator] declared in kotlin.collections.Iterator' type=kotlin.Boolean origin=FOR_LOOP_HAS_NEXT
          $this: GET_VAR 'val tmp0_iterator: kotlin.collections.Iterator<kotlin.Int> [val] declared in <root>.getSum' type=kotlin.collections.Iterator<kotlin.Int> origin=null
        body: BLOCK type=kotlin.Unit origin=FOR_LOOP_INNER_WHILE
          VAR FOR_LOOP_VARIABLE name:element type:kotlin.Int [val]
            CALL 'public abstract fun next (): T of kotlin.collections.Iterator [operator] declared in kotlin.collections.Iterator' type=kotlin.Int origin=FOR_LOOP_NEXT
              $this: GET_VAR 'val tmp0_iterator: kotlin.collections.Iterator<kotlin.Int> [val] declared in <root>.getSum' type=kotlin.collections.Iterator<kotlin.Int> origin=null
          SET_VAR 'var sum: kotlin.Int [var] declared in <root>.getSum' type=kotlin.Unit origin=PLUSEQ
            CALL 'public final fun jsBitOr (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Int declared in kotlin.internal.ir' type=kotlin.Int origin=SYNTHESIZED_STATEMENT
              arg0: CALL 'public final fun jsPlus (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Any? declared in kotlin.internal.ir' type=kotlin.Int origin=PLUSEQ
                arg0: GET_VAR 'var sum: kotlin.Int [var] declared in <root>.getSum' type=kotlin.Int origin=PLUSEQ
                arg1: GET_VAR 'val element: kotlin.Int [val] declared in <root>.getSum' type=kotlin.Int origin=null
              arg1: CONST Int type=kotlin.Int value=0
      RETURN type=kotlin.Nothing from='public final fun getSum (list: kotlin.collections.List<kotlin.Int>): kotlin.Int declared in <root>'
        GET_VAR 'var sum: kotlin.Int [var] declared in <root>.getSum' type=kotlin.Int origin=null
  FUN DEFAULT_PROPERTY_ACCESSOR name:<get-sum> visibility:public modality:FINAL <> () returnType:kotlin.Int
    correspondingProperty: PROPERTY name:sum visibility:public modality:FINAL [const,val]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun <get-sum> (): kotlin.Int declared in <root>'
        GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:sum type:kotlin.Int visibility:public [final,static]' type=kotlin.Int origin=null
  FIELD PROPERTY_BACKING_FIELD name:sum type:kotlin.Int visibility:public [final,static]
    EXPRESSION_BODY
      CONST Int type=kotlin.Int value=16
