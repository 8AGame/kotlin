FILE fqName:<root> fileName:/tryFinally.kt
  FUN name:tryFinally visibility:public modality:FINAL <> (initValue:kotlin.Int) returnType:kotlin.Int
    annotations:
      CompileTimeCalculation
    VALUE_PARAMETER name:initValue index:0 type:kotlin.Int
    BLOCK_BODY
      VAR name:x type:kotlin.Int [var]
        GET_VAR 'initValue: kotlin.Int declared in <root>.tryFinally' type=kotlin.Int origin=null
      TRY type=kotlin.Unit
        try: BLOCK type=kotlin.Unit origin=null
          RETURN type=kotlin.Nothing from='public final fun tryFinally (initValue: kotlin.Int): kotlin.Int declared in <root>'
            GET_VAR 'var x: kotlin.Int [var] declared in <root>.tryFinally' type=kotlin.Int origin=null
        finally: BLOCK type=kotlin.Unit origin=null
          SET_VAR 'var x: kotlin.Int [var] declared in <root>.tryFinally' type=kotlin.Unit origin=EQ
            CALL 'public final fun jsBitOr (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Int declared in kotlin.internal.ir' type=kotlin.Int origin=SYNTHESIZED_STATEMENT
              arg0: CALL 'public final fun jsPlus (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Any? declared in kotlin.internal.ir' type=kotlin.Int origin=PLUS
                arg0: GET_VAR 'var x: kotlin.Int [var] declared in <root>.tryFinally' type=kotlin.Int origin=null
                arg1: CONST Int type=kotlin.Int value=1
              arg1: CONST Int type=kotlin.Int value=0
  FUN name:tryFinally2 visibility:public modality:FINAL <> () returnType:kotlin.String
    annotations:
      CompileTimeCalculation
    BLOCK_BODY
      VAR name:str type:kotlin.String [var]
        CONST String type=kotlin.String value=""
      TRY type=kotlin.Unit
        try: BLOCK type=kotlin.Unit origin=null
          SET_VAR 'var str: kotlin.String [var] declared in <root>.tryFinally2' type=kotlin.Unit origin=PLUSEQ
            CALL 'public final fun jsPlus (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Any? declared in kotlin.internal.ir' type=kotlin.String origin=PLUSEQ
              arg0: GET_VAR 'var str: kotlin.String [var] declared in <root>.tryFinally2' type=kotlin.String origin=PLUSEQ
              arg1: CONST String type=kotlin.String value="Inside try block; "
        finally: BLOCK type=kotlin.Unit origin=null
          SET_VAR 'var str: kotlin.String [var] declared in <root>.tryFinally2' type=kotlin.Unit origin=PLUSEQ
            CALL 'public final fun jsPlus (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Any? declared in kotlin.internal.ir' type=kotlin.String origin=PLUSEQ
              arg0: GET_VAR 'var str: kotlin.String [var] declared in <root>.tryFinally2' type=kotlin.String origin=PLUSEQ
              arg1: CONST String type=kotlin.String value="Inside finally; "
      SET_VAR 'var str: kotlin.String [var] declared in <root>.tryFinally2' type=kotlin.Unit origin=PLUSEQ
        CALL 'public final fun jsPlus (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Any? declared in kotlin.internal.ir' type=kotlin.String origin=PLUSEQ
          arg0: GET_VAR 'var str: kotlin.String [var] declared in <root>.tryFinally2' type=kotlin.String origin=PLUSEQ
          arg1: CONST String type=kotlin.String value="Outside try; "
      RETURN type=kotlin.Nothing from='public final fun tryFinally2 (): kotlin.String declared in <root>'
        GET_VAR 'var str: kotlin.String [var] declared in <root>.tryFinally2' type=kotlin.String origin=null
  FUN name:tryCatchFinally visibility:public modality:FINAL <> () returnType:kotlin.Int
    annotations:
      CompileTimeCalculation
    BLOCK_BODY
      TRY type=kotlin.Unit
        try: BLOCK type=kotlin.Unit origin=null
          THROW type=kotlin.Nothing
            CALL 'public final fun IllegalArgumentException_init_$Create$ (message: kotlin.String?): kotlin.IllegalArgumentException declared in kotlin.IllegalArgumentException' type=kotlin.IllegalArgumentException origin=null
              message: CONST String type=kotlin.String value="In try"
        CATCH parameter=val $p: dynamic [val] declared in <root>.tryCatchFinally
          VAR SYNTHESIZED_DECLARATION name:$p type:dynamic [val]
          BLOCK type=kotlin.Unit origin=SYNTHESIZED_STATEMENT
            WHEN type=kotlin.Unit origin=SYNTHESIZED_STATEMENT
              BRANCH
                if: CALL 'public final fun jsInstanceOf (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=SYNTHESIZED_STATEMENT
                  arg0: GET_VAR 'val $p: dynamic [val] declared in <root>.tryCatchFinally' type=dynamic origin=SYNTHESIZED_STATEMENT
                  arg1: CALL 'public final fun jsClass <T> (): kotlin.js.JsClass<T of kotlin.js.jsClass> [external] declared in kotlin.js' type=kotlin.js.JsClass<T of kotlin.js.jsClass> origin=SYNTHESIZED_STATEMENT
                    <T>: kotlin.IllegalArgumentException
                then: BLOCK type=kotlin.Unit origin=null
                  THROW type=kotlin.Nothing
                    CALL 'public final fun IllegalArgumentException_init_$Create$ (message: kotlin.String?): kotlin.IllegalArgumentException declared in kotlin.IllegalArgumentException' type=kotlin.IllegalArgumentException origin=null
                      message: CONST String type=kotlin.String value="In catch"
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: BLOCK type=kotlin.Unit origin=SYNTHESIZED_STATEMENT
                  WHEN type=kotlin.Unit origin=SYNTHESIZED_STATEMENT
                    BRANCH
                      if: CONST Boolean type=kotlin.Boolean value=true
                      then: BLOCK type=kotlin.Nothing origin=SYNTHESIZED_STATEMENT
                        THROW type=kotlin.Nothing
                          GET_VAR 'val $p: dynamic [val] declared in <root>.tryCatchFinally' type=dynamic origin=SYNTHESIZED_STATEMENT
        finally: BLOCK type=kotlin.Unit origin=null
          THROW type=kotlin.Nothing
            CALL 'public final fun IllegalArgumentException_init_$Create$ (message: kotlin.String?): kotlin.IllegalArgumentException declared in kotlin.IllegalArgumentException' type=kotlin.IllegalArgumentException origin=null
              message: CONST String type=kotlin.String value="In finally"
      RETURN type=kotlin.Nothing from='public final fun tryCatchFinally (): kotlin.Int declared in <root>'
        CONST Int type=kotlin.Int value=0
  FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a1> visibility:public modality:FINAL <> () returnType:kotlin.Int
    correspondingProperty: PROPERTY name:a1 visibility:public modality:FINAL [const,val]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun <get-a1> (): kotlin.Int declared in <root>'
        GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a1 type:kotlin.Int visibility:public [final,static]' type=kotlin.Int origin=null
  FIELD PROPERTY_BACKING_FIELD name:a1 type:kotlin.Int visibility:public [final,static]
    EXPRESSION_BODY
      CONST Int type=kotlin.Int value=0
  FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a2> visibility:public modality:FINAL <> () returnType:kotlin.Int
    correspondingProperty: PROPERTY name:a2 visibility:public modality:FINAL [const,val]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun <get-a2> (): kotlin.Int declared in <root>'
        GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a2 type:kotlin.Int visibility:public [final,static]' type=kotlin.Int origin=null
  FIELD PROPERTY_BACKING_FIELD name:a2 type:kotlin.Int visibility:public [final,static]
    EXPRESSION_BODY
      CONST Int type=kotlin.Int value=10
  FUN DEFAULT_PROPERTY_ACCESSOR name:<get-b1> visibility:public modality:FINAL <> () returnType:kotlin.String
    correspondingProperty: PROPERTY name:b1 visibility:public modality:FINAL [const,val]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun <get-b1> (): kotlin.String declared in <root>'
        GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b1 type:kotlin.String visibility:public [final,static]' type=kotlin.String origin=null
  FIELD PROPERTY_BACKING_FIELD name:b1 type:kotlin.String visibility:public [final,static]
    EXPRESSION_BODY
      CONST String type=kotlin.String value="Inside try block; Inside finally; Outside try; "
  FUN DEFAULT_PROPERTY_ACCESSOR name:<get-c1> visibility:public modality:FINAL <> () returnType:kotlin.Int
    correspondingProperty: PROPERTY name:c1 visibility:public modality:FINAL [const,val]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun <get-c1> (): kotlin.Int declared in <root>'
        GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:c1 type:kotlin.Int visibility:public [final,static]' type=kotlin.Int origin=null
  FIELD PROPERTY_BACKING_FIELD name:c1 type:kotlin.Int visibility:public [final,static]
    EXPRESSION_BODY
      ERROR_EXPR '
Exception kotlin.IllegalArgumentException: In finally
	at TryFinallyKt.tryCatchFinally(tryFinally.kt:26)' type=kotlin.Int
