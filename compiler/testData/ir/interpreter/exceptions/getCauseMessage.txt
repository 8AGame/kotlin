FILE fqName:<root> fileName:/getCauseMessage.kt
  FUN name:getArrayElement visibility:public modality:FINAL <> (array:kotlin.IntArray, index:kotlin.Int) returnType:kotlin.Int
    annotations:
      CompileTimeCalculation
    VALUE_PARAMETER name:array index:0 type:kotlin.IntArray
    VALUE_PARAMETER name:index index:1 type:kotlin.Int
    BLOCK_BODY
      TRY type=kotlin.Unit
        try: BLOCK type=kotlin.Unit origin=null
          RETURN type=kotlin.Nothing from='public final fun getArrayElement (array: kotlin.IntArray, index: kotlin.Int): kotlin.Int declared in <root>'
            CALL 'public final fun jsArrayGet (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Any? declared in kotlin.internal.ir' type=kotlin.Int origin=GET_ARRAY_ELEMENT
              arg0: GET_VAR 'array: kotlin.IntArray declared in <root>.getArrayElement' type=kotlin.IntArray origin=null
              arg1: GET_VAR 'index: kotlin.Int declared in <root>.getArrayElement' type=kotlin.Int origin=null
        CATCH parameter=val $p: dynamic [val] declared in <root>.getArrayElement
          VAR SYNTHESIZED_DECLARATION name:$p type:dynamic [val]
          BLOCK type=kotlin.Unit origin=SYNTHESIZED_STATEMENT
            WHEN type=kotlin.Unit origin=SYNTHESIZED_STATEMENT
              BRANCH
                if: CALL 'public final fun jsInstanceOf (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=SYNTHESIZED_STATEMENT
                  arg0: GET_VAR 'val $p: dynamic [val] declared in <root>.getArrayElement' type=dynamic origin=SYNTHESIZED_STATEMENT
                  arg1: CALL 'public final fun jsClass <T> (): kotlin.js.JsClass<T of kotlin.js.jsClass> [external] declared in kotlin.js' type=kotlin.js.JsClass<T of kotlin.js.jsClass> origin=SYNTHESIZED_STATEMENT
                    <T>: kotlin.IndexOutOfBoundsException
                then: BLOCK type=kotlin.Unit origin=null
                  THROW type=kotlin.Nothing
                    CALL 'public final fun IllegalArgumentException_init_$Create$ (message: kotlin.String?, cause: kotlin.Throwable?): kotlin.IllegalArgumentException declared in kotlin.IllegalArgumentException' type=kotlin.IllegalArgumentException origin=null
                      message: CONST String type=kotlin.String value="Index must be less than array size and greater than zero"
                      cause: TYPE_OP type=kotlin.IndexOutOfBoundsException origin=REINTERPRET_CAST typeOperand=kotlin.IndexOutOfBoundsException
                        GET_VAR 'val $p: dynamic [val] declared in <root>.getArrayElement' type=dynamic origin=SYNTHESIZED_STATEMENT
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: BLOCK type=kotlin.Unit origin=SYNTHESIZED_STATEMENT
                  WHEN type=kotlin.Unit origin=SYNTHESIZED_STATEMENT
                    BRANCH
                      if: CONST Boolean type=kotlin.Boolean value=true
                      then: BLOCK type=kotlin.Nothing origin=SYNTHESIZED_STATEMENT
                        THROW type=kotlin.Nothing
                          GET_VAR 'val $p: dynamic [val] declared in <root>.getArrayElement' type=dynamic origin=SYNTHESIZED_STATEMENT
  FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a> visibility:public modality:FINAL <> () returnType:kotlin.String
    correspondingProperty: PROPERTY name:a visibility:public modality:FINAL [const,val]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun <get-a> (): kotlin.String declared in <root>'
        GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.String visibility:public [final,static]' type=kotlin.String origin=null
  FIELD PROPERTY_BACKING_FIELD name:a type:kotlin.String visibility:public [final,static]
    EXPRESSION_BODY
      CONST String type=kotlin.String? value="-1"
  FUN DEFAULT_PROPERTY_ACCESSOR name:<get-b> visibility:public modality:FINAL <> () returnType:kotlin.String
    correspondingProperty: PROPERTY name:b visibility:public modality:FINAL [const,val]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun <get-b> (): kotlin.String declared in <root>'
        GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.String visibility:public [final,static]' type=kotlin.String origin=null
  FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.String visibility:public [final,static]
    EXPRESSION_BODY
      CONST String type=kotlin.String value="Element at given index is 1"
